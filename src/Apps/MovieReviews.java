/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Apps;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Citrine
 */
public class MovieReviews extends javax.swing.JFrame {
    
    private int UserID = 0;
    private int MovieID = 0;
    private String MovieName = "";
    private String Username = "";
    private float MovieRating = 0;
    
    private void Center() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }
    
    private MovieReviews() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public void tableData(String MovieName) {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn(MovieName);
        model.addColumn("Description");
        model.addColumn("Rating");
        Table.setModel(model);
        
        try {
            String SelStm = "SELECT user.UserName, rating.Comment, rating.RatingScore FROM User RIGHT JOIN Rating ON rating.UserID = user.UserID;";
            java.sql.Connection conn = Config.ConfigDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(SelStm);
            

            while(res.next()) {
                if(res.getString(1).equals(this.Username)) {
                    continue;
                } else {
                    model.addRow(new Object[]{res.getString(1), res.getString(2),res.getString(3)});                    
                }
            }
            
            Table.setModel(model);
            
        } catch(SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
    
    private void getRating(int MovieID) {
        float AverageRating = 0;
        int RatingCount = 0;
        String RatingTxt = "Average Rating: ";
        try {
            String SelStm = "SELECT * FROM rating";
            java.sql.Connection conn = Config.ConfigDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(SelStm);
            System.out.println(UserID);
            System.out.println(MovieID);

            while(res.next()) {
                if(MovieID == res.getInt(2)) {
                    System.out.println(res.getFloat(5));
                    RatingCount++;
                    AverageRating += res.getFloat(5);
                }
            }
            
            if(RatingCount >= 0) {
                AverageRating = AverageRating/RatingCount;
                RatingTxt += AverageRating;
                this.MovieRating = AverageRating;
            }
            
            AvgRating.setText(RatingTxt);
            this.MovieRating = AverageRating;
        } catch(SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
    /**
     * Creates new form Movie List
     */
    public MovieReviews(String MovieName, String Username, int UserID, int MovieID) {
        this.MovieID = MovieID;
        this.MovieName = MovieName;
        this.Username = Username;
        this.UserID = UserID;
        initComponents();
        tableData(this.MovieName);
        Center();
        
        try {
            String SelStm = "SELECT * FROM rating";
            java.sql.Connection conn = Config.ConfigDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(SelStm);
            System.out.println(UserID);
            System.out.println(MovieID);

            while(res.next()) {
                if(UserID == res.getInt(3) && MovieID == res.getInt(2)) {
                    System.out.println("Success");
                    ReviewField.setText(res.getString(4));
                    for(int i = 0; i < jComboBox1.getItemCount(); i++) {
                        if(jComboBox1.getItemAt(i).equals(res.getString(5))) {
                            jComboBox1.setSelectedIndex(i);
                        }
                    }
                }
            }
            
            getRating(this.MovieID);
        } catch(SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        AvgRating = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ReviewField = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 440));
        getContentPane().setLayout(null);

        jPanel2.setMinimumSize(new java.awt.Dimension(682, 880));
        jPanel2.setPreferredSize(new java.awt.Dimension(682, 880));
        jPanel2.setLayout(null);

        jButton3.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jButton3.setText("Back to Movie List");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(451, 321, 220, 40);

        jLabel1.setFont(new java.awt.Font("Impact", 0, 48)); // NOI18N
        jLabel1.setText("Rating");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(20, 20, 240, 50);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(Table);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(0, 90, 680, 280);

        AvgRating.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        AvgRating.setText("Average Rating:");
        jPanel2.add(AvgRating);
        AvgRating.setBounds(380, 30, 270, 29);

        jLabel3.setFont(new java.awt.Font("Impact", 0, 48)); // NOI18N
        jLabel3.setText("Your Review");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel2.add(jLabel3);
        jLabel3.setBounds(0, 380, 250, 50);

        jComboBox1.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0.0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1.0", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "1.7", "1.8", "1.9", "2.0", "2.1", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7", "2.8", "2.9", "3", "3.1", "3.2", "3.3", "3.4", "3.5", "3.6", "3.7", "3.8", "3.9", "4.0", "4.1", "4.2", "4.3", "4.4", "4.5", "4.6", "4.7", "4.8", "4.9", "5.0" }));
        jPanel2.add(jComboBox1);
        jComboBox1.setBounds(490, 550, 130, 40);

        jButton1.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(481, 801, 190, 60);

        jLabel4.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel4.setText("Rating");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(490, 510, 130, 31);

        jLabel5.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel5.setText("Review");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(40, 510, 130, 31);

        ReviewField.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jScrollPane3.setViewportView(ReviewField);

        jPanel2.add(jScrollPane3);
        jScrollPane3.setBounds(40, 550, 410, 280);

        jScrollPane1.setViewportView(jPanel2);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 680, 440);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean ReviewExists = false;
        try {
            String SelStm = "SELECT * FROM rating";
            java.sql.Connection conn = Config.ConfigDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(SelStm);

            while(res.next()) {
                if(res.getInt(3) == this.UserID && res.getInt(2) == this.MovieID) {
                    String UpdateStm = "UPDATE rating SET Comment='" + ReviewField.getText() + "', RatingScore='" + jComboBox1.getSelectedItem().toString() + "' WHERE UserID='" + this.UserID + "';";
                    java.sql.PreparedStatement pstm = conn.prepareStatement(UpdateStm);
                    pstm.execute();
                    ReviewExists = true;
                } 
            }
            
            if(!ReviewExists) {
                String AddStm = "INSERT INTO rating VALUES (NULL, '" + this.MovieID + "', '" + this.UserID + "', '" + ReviewField.getText() + "', '" + jComboBox1.getSelectedItem().toString() + "');";
                java.sql.PreparedStatement pstm = conn.prepareStatement(AddStm);
                pstm.execute();
            }
            
            getRating(this.MovieID);
            
            String MovieUpdStm = "UPDATE movie SET RatingAvg='" + this.MovieRating +"' WHERE MovieID= '" + this.MovieID +"';";
            java.sql.PreparedStatement pstm = conn.prepareStatement(MovieUpdStm);
            pstm.execute();
            
        } catch(SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        MovieList ML = new MovieList(this.Username, this.UserID);
        this.setVisible(false);
        ML.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieReviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieReviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieReviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieReviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieReviews().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AvgRating;
    private javax.swing.JTextPane ReviewField;
    private javax.swing.JTable Table;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
